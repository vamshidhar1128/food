AWSTemplateFormatVersion: '2010-09-09'
Description: Create a VPC with public and private subnets, internet gateway, and routing

Resources:

  task15:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/18
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: task15VPC

  task15InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: task15InternetGateway

  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref task15
      InternetGatewayId: !Ref task15InternetGateway

  task15PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref task15
      CidrBlock: 10.0.0.0/20
      MapPublicIpOnLaunch: true
      AvailabilityZone: ap-south-1a
      Tags:
        - Key: Name
          Value: task15-Public-Subnet1

  task15PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref task15
      CidrBlock: 10.0.16.0/20
      MapPublicIpOnLaunch: true
      AvailabilityZone: ap-south-1b
      Tags:
        - Key: Name
          Value: task15-Public-Subnet2

  task15PublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref task15
      CidrBlock: 10.0.32.0/20
      MapPublicIpOnLaunch: true
      AvailabilityZone: ap-south-1c
      Tags:
        - Key: Name
          Value: task15-Public-Subnet3

  task15PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref task15
      CidrBlock: 10.0.48.0/20
      MapPublicIpOnLaunch: false
      AvailabilityZone: ap-south-1c
      Tags:
        - Key: Name
          Value: task15-Private-Subnet

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref task15
      Tags:
        - Key: Name
          Value: task15-PublicRouteTable

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref task15
      Tags:
        - Key: Name
          Value: task15-PrivateRouteTable

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachInternetGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref task15InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref task15PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref task15PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref task15PublicSubnet3
      RouteTableId: !Ref PublicRouteTable

  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref task15PrivateSubnet
      RouteTableId: !Ref PrivateRouteTable

  PublicSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH and HTTP from anywhere
      VpcId: !Ref task15
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: task15-PublicSG

  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: ALBTargetGroup
      VpcId: !Ref task15
      Protocol: HTTP
      Port: 80
      TargetType: instance
      HealthCheckProtocol: HTTP
      HealthCheckPort: traffic-port
      HealthCheckPath: /
      Matcher:
        HttpCode: 200
      Tags:
        - Key: Name
          Value: task15-TG

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: task15-ALB
      Subnets:
        - !Ref task15PublicSubnet1
        - !Ref task15PublicSubnet2
        - !Ref task15PublicSubnet3
      SecurityGroups:
        - !Ref PublicSecurityGroup
      Scheme: internet-facing
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '60'
      Tags:
        - Key: Name
          Value: task15-ALB
      Type: application

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ALBTargetGroup
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP

  MyLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: MyLaunchTemplate
      LaunchTemplateData:
        ImageId: ami-002f6e91abff6eb96
        InstanceType: t3.micro

  MyAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - !Ref task15PublicSubnet1
        - !Ref task15PublicSubnet2
        - !Ref task15PublicSubnet3
      LaunchTemplate:
        LaunchTemplateId: !Ref MyLaunchTemplate
        Version: !GetAtt MyLaunchTemplate.LatestVersionNumber
      MinSize: '1'
      MaxSize: '1'
      DesiredCapacity: '1'
      TargetGroupARNs:
        - !Ref ALBTargetGroup
      Tags:
        - Key: Name
          Value: MyASGInstance
          PropagateAtLaunch: true

  MyDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for task15 RDS
      SubnetIds:
        - !Ref task15PublicSubnet1
        - !Ref task15PublicSubnet2

      Tags:
        - Key: Name
          Value: task15-DBSubnetGroup

  MyDBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow RDS access from public instances
      VpcId: !Ref task15
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref PublicSecurityGroup
      Tags:
        - Key: Name
          Value: task15-RDSSG

  MyRDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: task15-db
      AllocatedStorage: 20
      DBInstanceClass: db.t3.micro
      Engine: mysql
      EngineVersion: 8.0.32
      MasterUsername: admin
      MasterUserPassword: Task15SecurePwd123  # Use SecretsManager for real apps!
      VPCSecurityGroups:
        - !Ref MyDBSecurityGroup
      DBSubnetGroupName: !Ref MyDBSubnetGroup
      MultiAZ: false
      PubliclyAccessible: false
      StorageType: gp2
      BackupRetentionPeriod: 7
      Tags:
        - Key: Name
          Value: task15-RDSInstance
